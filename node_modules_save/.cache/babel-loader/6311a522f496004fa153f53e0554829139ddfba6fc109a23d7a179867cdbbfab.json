{"ast":null,"code":"var _jsxFileName = \"/Users/ssmith_1989/pie-or-dye/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport Home from './Home';\nimport '../style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [authToken, setAuthToken] = useState(window.localStorage.getItem('st-token'));\n  const DB_NAME = 'Git-Baked';\n  const DB_URL = process.env.DATABASE_URL || `postgres://localhost:5432/${DB_NAME}`;\n\n  // useEffect(() => {\n  // follow this pattern inside your useEffect calls:\n  // first, create an async function that will wrap your axios service adapter\n  // invoke the adapter, await the response, and set the data\n  // const getAPIStatus = async () => {\n  //   const { healthy } = await getAPIHealth();\n  //   setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n  // };\n\n  // second, after you've defined your getter above\n  // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Git Baked! Your online bakery.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/\",\n          children: \" Home \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-one\",\n          to: \"/products\",\n          children: \" Products \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-two\",\n          to: \"/login\",\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-three\",\n          to: \"/register\",\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          DB_URL: DB_URL,\n          authToken: authToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          authToken: authToken,\n          setAuthToken: setAuthToken,\n          DB_URL: DB_URL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"products\",\n        element: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Products \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NtlIlOogJY4aje6yiH4jnHFbTqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Link","Routes","Route","Login","Register","Home","jsxDEV","_jsxDEV","App","_s","authToken","setAuthToken","window","localStorage","getItem","DB_NAME","DB_URL","process","env","DATABASE_URL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","index","element","path","_c","$RefreshReg$"],"sources":["/Users/ssmith_1989/pie-or-dye/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport Home from './Home';\nimport '../style/App.css';\n\nconst App = () => {\n    const [authToken, setAuthToken] = useState(window.localStorage.getItem('st-token'));\n    const DB_NAME = 'Git-Baked';\n    const DB_URL =\n  process.env.DATABASE_URL || `postgres://localhost:5432/${DB_NAME}`;\n\n  // useEffect(() => {\n    // follow this pattern inside your useEffect calls:\n    // first, create an async function that will wrap your axios service adapter\n    // invoke the adapter, await the response, and set the data\n    // const getAPIStatus = async () => {\n    //   const { healthy } = await getAPIHealth();\n    //   setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\n    // };\n\n    // second, after you've defined your getter above\n    // invoke it immediately after its declaration, inside the useEffect callback\n  //   getAPIStatus();\n  // }, []);\n\n  return (\n    <div className=\"app-container\">\n      <header> \n      <h1>Welcome to Git Baked! Your online bakery.</h1>\n            <div className= 'links'>\n      <Link className='link' to='/'> Home </Link>\n      <Link className='link-one'to='/products'> Products </Link>\n      <Link className='link-two' to='/login'> Login </Link>\n      <Link className='link-three'to='/register'> Register </Link>\n      \n      </div>\n\n      </header>\n    \n      <Routes>\n      <Route index element={<Home DB_URL={DB_URL}  authToken={authToken} />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"register\" element={<Register authToken={authToken} setAuthToken={setAuthToken} DB_URL={DB_URL} />} />\n        <Route path=\"products\" element={<h2> Products </h2>} />\n      </Routes>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}